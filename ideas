
Ideas
=====

PROBLEM: apparently I made a really bad assumption in a bunch of the Haskell code:
that there's a 1:1 correspondence between edges in the Network and edges in the Layout.
But each network edge may need a bunch of layout edges.

Do what's in the Google Doc

To lay out the lines, just start with a straight line connecting the two
points, then add an intermediate point off to the side of the first obstacle,
curve the line to go through that point, and repeat.

What if another obstacle arises along a curve?

  Don't use that curve.

Use a backtracking algorithm to try out going on either side of each obstacle, as
well as possibly trying different distances out from each obstacle.

